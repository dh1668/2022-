Python을 통해 데이터 분석을 할때 기초 라이브러리로 사용되는 Numpy

Numpy 란
 c언어로 구현된 파이썬 라이브러리, 고성능의 수치 계산을 위해 제작

 벡터 및 행렬 연산에 있어서 매우 편리한 기능

 데이터분석을 할때 사용되는 라이브러리인 pandas 와 matplotlib의 기반으로 사용

 Numpy에서 기본적으로 array(행렬) 단위로 데이터를 관리하며 이에 대해 연산수행

문법 : 
import numpy as np : numpy 라이브러리 패키지를 np에 적용시키겠다

data1 = [1,2,3,4,5]	 << 일반 리스트 생성		바로출력하는법
(1)	arr1 = np.array(data1)		(2)  arr2 = np.array([1,2,3,4,5])		
=> array( [1,2,3,4,5] ) 로출력			   =>array( [1,2,3,4,5] ) 로출력			

# array의 형태(크기)를 확인할 수 있다.
	arr1.shape

# array의 자료형을 확인할 수 있다.
	arr2.dtype	: 배열안의 요소 데이터타입 확인하는것


np.zeros(), np.ones(), np.arange() 함수
numpy에서 array를 정의할 때 사용되는 함수들이다

 mean() - 평균 계산
- 사용법 : numpy.mean(리스트 or 튜플)

 var() - 분산 계산
- 사용법 : numpy.var(리스트 or 튜플)
 
 std() - 표준 편차 계산
- 사용법 : numpy.std(리스트 or 튜플)


 sys.stdin.readline().split()
입력 함수를 sys.stdin.readline()을 사용했기 때문에, 한 줄에 원하는 만큼 값을 입력받을 수 있습니다.
 	   split()함수를 사용하여, 공백을 제거


평균 :말그대로 평균
=>	mu : 평균

표준편차 .std() :  평균(mean) 에 대한 오차  
즉 , 실제 데이타 값이 평균을 기준으로 할때 얼마나 들쭉 날쭉하냐를 나타내는 것
=>	 sigma:표준편차

=> 표준 편차(standard deviation)는 분산을 제곱근한 것
원래의 값에서 평균을 뺀 값인데, 편차는 +도 될 수 있고, -도 될 수 있다.

분산에 루트를 씌운것이 표준 편차(Standard deviation) 이며, 
이 표준편차는 평균으로 부터 원래 데이타에 대한 오차범위의 근사값




분산(Variance)으로 "편차의 제곱의 합"

분산(Variance)을 바로 쓰지 않고, 표준편차를 구하는 이유는? 
=>	분산은 편차에 제곱을 하여 계산을 하였기 때문에, 
	실제  값에서 너무 멀어져 있다. 그래서 실제 값으로 근접 시키기 위해서 제곱근(루트)를 씌워준 것이다. 
	(분산에서 제곱했으니, 반대로 제곱근을 씌운다.)

그래프
binominal_hist(p,n,nps) : # p : 확률 , n : 시도횟수 , nps : (p,n)을 시도할 횟수


랜덤

randn
표준 정규 분포 ( N(0,1) 즉, 평균이 0이고 표준편차가 1인 분포) 에서 추출한 샘플을 리턴한다. 
따라서 음수의 값이 나올 수 있다.

rand
즉, 0은 들어가지만 1은 들어가지 않는 균등분포(각각의 변수가 나올 확률이 똑같은 분포)로 부터 
랜덤한 샘플을 추출하여 배열을 반환해주는 것이다. 
따라서 음수의 값이 나올 수 없다.