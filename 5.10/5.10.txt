Pandas < 판다스 >

import pandas as pd < 판다스 라이브러리 호출>


Series : 칼럼을 만들기위해 사용




-------------------------------------------------------------------------------------------------
DataFrame : 여러개의 칼럼 사용


실질적인 사용예시 (구글드라이브에 넣고 경로복사해서 불러오기)
csv 찾아보기  
=>csv파일을 메모장으로 파일 열어보면 칼럼은  " " 로 구분되어있다


기계학습때 많이 사용됨 <구글드라이브에 저장해놨음> 
sepal 꽃바침
petal 꽃잎 width 너비


실무에선 
실질적인 데이터는 전처리 = null 인것을 바꾸는 데이터처리
=>기본적인 파이썬 능력이 좋음


loc는 칼럼명을 직접 적거나 특정 조건식을 써줌으로써 사람이 읽기 좋은 방법으로 데이터에 접근하는 방법이었다면, 
iloc는 컴퓨터가 읽기 좋은 방법으로(숫자로) 데이터가 있는 위치(순서)에 접근한다고 생각하면 쉬울 것이다.


<판다스에서만 쓴다 생각하면 편함> 
쓰는 방법 :
 .loc[row명 : row 명] 			=> 가로기준으로 출력 
 .iloc[row의 인덱스 번호 : row인덱스 번호-1]   => 가로 기준으로 출력되긴함

사용 특징 :
 loc는 문자 숫자(인덱스번호) 둘 다 된다
 iloc 는 숫자(인덱스번호)만 된다





https://losskatsu.github.io/programming/py-pandas-iloc/# 참고

------------------------------------------------------------------------------------------------
데이터 통합하기

-기존배열을 변경하지 않습니다. 

-추가된 새로운 배열을 반환합니다.

concat()
const array1 = ['a', 'b', 'c'];
const array2 = ['d', 'e', 'f'];
const array3 = array1.concat(array2);

console.log(array3);
// expected output: Array ["a", "b", "c", "d", "e", "f"]


merge()
공통되는 칼럼의 데이터 끼리 모아주고 칼럼순으로 반환



merge_asof()

Joining DataFrames in Pandas



--------------------

-상관관계와 공분산

피어슨 상관관계  구글링
https://ko.wikipedia.org/wiki/%ED%94%BC%EC%96%B4%EC%8A%A8_%EC%83%81%EA%B4%80_%EA%B3%84%EC%88%98

상관계수 : 올라가면 같이올라가고  내려가면 같이 내려간다,.



[ x for x in range(0,250,5)] 는 => 0에서 5 , 5에서 10 이런식으로 250까지



최소값, 최대값, 혹은 조건에 해당하는 색인(index) 값을 찾기 
   : np.argmin(), np.argmax(), np.where()


histogram : 
1.표로 되어 있는 도수 분포 를 정보 그림으로 나타낸 것

2.히스토그램은 어떠한 변수에 대해서 구간별 빈도수를 나타낸 그래프다. 
위의 예제는 0부터 20까지의 ★ 범위를 10개의 동일한 구간으로 나누고
각 구간에 대해서 변수 x의 빈도수를 그린 히스토그램

출처<사진참고> :https://opentutorials.org/module/2860/17045

- 최소값, 최대값, 혹은 조건에 해당하는 색인(index) 값을 찾기 

   : np.argmin(), np.argmax(), np.where()



- 최소값, 최대값, 혹은 조건에 맞는 값 찾기 

   : np.min(), np.max(), x[np.where()]



출처: https://rfriend.tistory.com/356 [R, Python 분석과 프로그래밍의 친구 (by R Friend)]





최빈값(最頻-), 모드(mode)는 통계학 용어로, 가장 많이 관측되는 수,
 즉 주어진 값 중에서 가장 자주 나오는 값이다. 
예를 들어, {1, 3, 6, 6, 6, 7, 7, 12, 12, 17}의 최빈값은 6이다





출처: https://rfriend.tistory.com/356 [R, Python 분석과 프로그래밍의 친구 (by R Friend)]


--------------------------------------------------------------------------------
상관관계 , 


공분산
편차곱을 자유도로 나눈것  즉, 편차곱의 평균 
https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=ikek21&logNo=220003173213

확률  : 0에서 1까지 수로 표현 

확률에서, 한 사건이 다른 사건의 확률에 영향을 미치지 않을 때 두 사건은 독립이라고 합니다.
 예를 들어, 동전을 던져서 앞면이 나올 확률은 1 / 2 1/2 1/2 입니다.


동시에 사건발생시 log 를 씌워야함
log ( P(a) * P(b) * P(c) * P(d) * P(e) * P(f) * P(g) )

= log P(a) + log P(b) + log P(c) + log P(d) + log P(e) + log P(f) 

로지스틱 회귀
 확률 모델로서 독립 변수의 선형 결합을 이용하여
 사건의 발생 가능성을 예측하는데 사용되는 통계 기법

오즈 (odds) & 로짓 변환
성공 확률이 실패 확률에 비해 몇 배 더 높은가를 나타내며 그 식은 아래와 같다.

선형예측변수 :  f(i) = B. X_i



★★
matplotlib.pyplot 
모듈의 각각의 함수를 사용해서 간편하게 그래프를 만들고 변화를 줄 수 있습니다.

예를 들어, 그래프 영역을 만들고, 몇 개의 선을 표현하고, 레이블로 꾸미는 등의 일을 할 수 있다









--------------------------------------------------------------------
#옆에 파일 만들고 파일내용 
#진협 : 23 : 99
#유진 : 21 : 98
#우진 : 24 : 101
# 이렇게 작성하고 아래코드 작성

df3 = pd.read_table('/content/kdh.abc',sep=':') #sep = " " 안에 있는 : 기준으로 구분해주는 메소드 
df3       # 효율성은 지극히 낮다.
----------------------------------------
ord(c)는 문자의 유니코드 값을 돌려주는 함수이다. ※ ord 함수는 chr 함수와 반대이다.

---------------------------------------
https://matplotlib.org/stable/users/index.html => matplotlib 주소 참고
플롯유형
matplotlib.pyplot.plot << 누르고 번역해서 보기 

plot pie bar








mport matplotlib.pyplot as plt

plt.plot([1, 2, 3, 4])
plt.show()

yplot.plot() 함수에 하나의 숫자 리스트를 입력함으로써 아래와 같은 그래프가 그려집니다.

plot() 함수는 리스트의 값들이 y 값들이라고 가정하고, x 값 [0, 1, 2, 3]을 자동으로 만들어냅니다.

matplotlib.pyplot 모듈의 show() 함수는 그래프를 화면에 나타나도록 합니다.

 원형 (‘o’) 마커를 의미
 실선 (‘b‘)을 의미

------------------------------------------------------------------------------------------------
질문해서 물어볼것
import numpy as np
se = pd.Series([1,np.nan,None,5])     # np.nan 이기때문에 flaot형태
print(se)                       # 이거 물어보기





df.iloc[1][0]=2     # 다시물어보기
df



df3 = df.dropna(axis=1) #axis 는 축이라고함  <칼럼축> = 세로
df3  



print("====키")
print("평균:   ",heights.mean())
print("중간값 :",np.median(heights))
print("1/4분위:",np.quantile(heights,0.25))
print("1/2분위:",np.quantile(heights,0.5)) # 중간값과 같음
print("3/4분위:",np.quantile(heights,0.75))                       
hist,_ = np.histogram(heights,bins= [ x for x in range(0,250,5)]) #bins 지정하지 않으면 최댓값 과 최소값 디폴트값 10개 나눠 지정한거
mi = hist.argmax()   #제일 큰 index                               #bins 는 구간을 뜻하는거임
print("최빈구간:",mi*5+2.5)




























